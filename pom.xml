<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.wh</groupId>
  <artifactId>maddjacoco</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>maddjacoco</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <jacoco.version>0.8.5</jacoco.version>
  </properties>

  <dependencies>

    <!--jacoco驱动包-->
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>0.7.9</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.11</version>
    </dependency>

  </dependencies>



  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <includes>
              <include>**/*Tests.java</include>
            </includes>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
            </excludes>
          </configuration>
        </plugin>

        <!--jacoco驱动包-->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <argLine>
              -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.basedir}/target/coverage-reports/jacoco-unit.exec
            </argLine>
            <testFailureIgnore>true</testFailureIgnore>
          </configuration>
        </plugin>
        <!--检查代码覆盖率的插件配置-->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.5</version>
          <configuration>
            <!--指定生成.exec文件的存放位置-->
            <destFile>target/coverage-reports/jacoco-unit.exec</destFile>
            <!--Jacoco是根据.exec文件生成最终的报告，所以需指定.exec的存放路径-->
            <outputDirectory>target/jacoco-temp</outputDirectory>
            <includes>
              <include>**/service/**</include>
            </includes>
            <!-- rules里面指定覆盖规则 -->
            <rules>
              <rule implementation="org.jacoco.maven.RuleConfiguration">
                <element>BUNDLE</element>
                <limits>　　
                  <!-- 指定方法覆盖到50% -->
                  <limit implementation="org.jacoco.report.check.Limit">
                    <counter>METHOD</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>0.80</minimum>
                  </limit>
                  <!-- 指定分支覆盖到50% -->
                  <limit implementation="org.jacoco.report.check.Limit">
                    <counter>BRANCH</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>0.80</minimum>
                  </limit>
                  <!-- 指定类覆盖到100%，不能遗失任何类 -->
                  <limit implementation="org.jacoco.report.check.Limit">
                    <counter>CLASS</counter>
                    <value>MISSEDCOUNT</value>
                    <maximum>0</maximum>
                  </limit>
                </limits>
              </rule>
            </rules>


          </configuration>
          <executions>
            <execution>
              <id>pre-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>post-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>

            <!-- report这个就是生成代码覆盖率报告，发生在default生命周期的verify阶段 -->
            <!--<execution>-->
            <!--<id>report</id>-->
            <!--<phase>prepare-package</phase>-->
            <!--<goals>-->
            <!--<goal>report</goal>-->
            <!--</goals>-->

            <!--</execution>-->

          </executions>
        </plugin>


      </plugins>
    </pluginManagement>
  </build>
</project>
